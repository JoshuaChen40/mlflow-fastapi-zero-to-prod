services:
  postgres:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow
      POSTGRES_DB: mlflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - mlops-net

  mlflow:
    build:
      context: .
      dockerfile: docker/Dockerfile.mlflow
    container_name: mlflow
    depends_on:
      - postgres
    ports:
      - "5000:5000"
    environment:
      MLFLOW_BACKEND_STORE_URI: postgresql://mlflow:mlflow@postgres:5432/mlflow
      MLFLOW_ARTIFACT_ROOT: /mlflow/artifacts
      GIT_PYTHON_REFRESH: quiet
    volumes:
      - ./workspace/mlruns:/mlflow/artifacts
    command: >
      mlflow server
      --backend-store-uri postgresql://mlflow:mlflow@postgres:5432/mlflow
      --serve-artifacts
      --artifacts-destination /mlflow/artifacts
      --host 0.0.0.0
      --port 5000
    networks:
      - mlops-net

  python-dev:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    container_name: python-dev
    working_dir: /usr/mlflow
    volumes:
      - ./notebooks:/usr/mlflow
    ports:
      - "8888:8888"
    environment:
      - KAGGLE_USERNAME=${KAGGLE_USERNAME}
      - KAGGLE_KEY=${KAGGLE_KEY}
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - GIT_PYTHON_REFRESH=quiet
    command: >
      jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token=Aa123456
    networks:
      - mlops-net

  fastapi:
    build:
      context: .
      dockerfile: docker/Dockerfile.fastapi
    container_name: fastapi
    ports:
      - "8000:8000"
    volumes:
      - ./src/api:/usr/mlflow/src/api
      - ./workspace:/usr/mlflow/workspace
    working_dir: /usr/mlflow/src/api
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - mlops-net

  streamlit:
    build:
      context: .
      dockerfile: docker/Dockerfile.streamlit
    container_name: streamlit_app
    ports:
      - "8501:8501"
    environment:
      - FASTAPI_URL=http://fastapi:8000
    volumes:
      - ./src/api:/src/api
      - ./notebooks:/src/api/notebooks
      - ./workspace:/src/api/workspace
    working_dir: /src/api
    command: >
      streamlit run main_streamlit.py
      --server.port=8501
      --server.address=0.0.0.0
      --server.runOnSave=true
    depends_on:
      - fastapi
    networks:
      - mlops-net

volumes:
  postgres_data:

networks:
  mlops-net:
    driver: bridge
